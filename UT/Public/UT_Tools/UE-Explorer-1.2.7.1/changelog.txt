1.2.7.1 Log:

Eliot.UELib.dll the engine behind UE Explorer is now open sourced at https://github.com/EliotVU/Unreal-Library

Added support for Vanguard: Saga of Heroes.
Added support for Tera: Rising.
Added support for Mortal Kombat Komplete Edition.
Added support for Transformers: Cybertron (and possible other releases).
Updated support for SpecialForce2.

Fixed an issue where certain fields were falsely decompiled and seen as replicated in the Replication block of a class.

Fixed support for Shadow Complex.
Fixed some localization errors.
Fixed a case where UE Explorer may crash, when it opens a package for the first time.

1.2.6.0 Log:

Added a new View option "View Disassembled Tokens".
Added content state tracking, this will remember the last object you were viewing in a package. Upon loading a package, you will be brought back to the last content state.
Added :Replication, :Tokens, and :Tokens-Disassembled suffixes for the object search input form.
Added configurable templates for :Tokens and :Tokens-Disassembled, you can now configure the output format by editing the files in "UE Explorer/Config/Templates/".
Added an option to build the classes TreeView into a classes hierachy view:

Enabled the BinaryMetaData in the public build, this means that a lot of data will now be recorded while the package is being deserialized, this data can then be accessed through the "View Buffer".

Added the following new context menu features:
- (Node)View Outer
- (Node)View Parent
- (Text selection)Search in Document
- (Text selection)Search in Classes
- (Text selection)Search as Object

Added defaultproperties support for the game "Dungeons & Dragons: Daggerdale"
Added the function "ReturnValue" property to the "Parameters" node.
Added "ScriptText", "CppText", "ProcessedText", "Within", "Super", and "NextField" as ObjectNodes in the classes TreeView where available.
Added new interface icons and updated old icons to Visual Studio 2013. 

Fixed an issue with "Swat 4" files.

1.2.4.1 Log:

Added support for Bioshock Infinite.
Added support for Remember Me.
Added support for Alpha Protocol.

Added Auto-Updater: UE Explorer will now check for updates upon launch, and give you the option to download and install with an ease.
Added a column for the package's Engine-LicenseeVersion, displayed when available.
Added the full path of files to the Recently Opened Files dropdown.
Added support for the new StateVariableToken and decompiling of Local variables in States. 
Added a new feature to search objects by group. For example if you input "Commandlet.Main", then UE Explorer will search for the class Commandlet and output its Main function.
Added a shortcut to open a object's buffer in an external program such as Hex Workshop.

New commandline arguments:
1. -newwindow (Opens a new window instance)
2. -silent (Only valid if -console is specified as well)

View Tokens: A much more detailed output.
1. Shows the corresponding buffer of each statement.
2. Memory and Storage positioned, and basic structure explanation built-in so you won't forget!
3. Shortened token names.

New Hex Viewer tools:
1. Copy Address, Copy Size.
2. Dump bytes will now replace the hyphen with a space delimiter.
3. Reload Package and Reload Buffer.
4. Bytecode tokens in the Hex Viewer are now colored based on various details.
5. The Hex Viewer can now live update the object's decompilation output if changes were made within the Hex Viewer itself. This can be triggered using CTRL+S followed by CTRL+D.

Fixed several bugs with UT3 and Mirrors Edge.
Fixed an issue with Hex Viewer.
Fixed Streams are now opened with shared writing, so you can edit using your favorite Hex Editor.
Fixed Function calls with skipped parameters are now output correctly for UE3 packages.
Fixed the virtual bytesize of some tokens.


1.2.2.1 Log:

    • Fixed the broken shortcut that was created by the setup program
    • Added an copyright notice in About and decompiled classes
    • Revised how arguments are handled, you are now required to append -console if you want to use export(which is now also -export)
    • Fixed a crash when exporting classes through the commandline
    • Fixed the installation of the NTL(Natives Tables List) extension

1.2.2 Log:

Games

    • Supported Special Force 2
    • Supported Borderlands 2
    • Supported Stargate Worlds
    • Supported Shadow Complex
    • Supported XIII(Not perfect)
    • Supported Hawken
    • Supported Dishonored


Content

    • You can now export .WAV sounds from games such as UT2003 and UT2004, etc


Decompilation

    • Decompiled subobojects or archetypes will now have an reference printed below them
    • Indentation can now be customized throughout the Options tab
    • Decompiled functions whom are native will now have an reference printed above the declaration revealing its C++ declaration name
    • CPPText and StructCPPText blocks are now decompiled if available
    • Added a new feature in options, making it possible to define the structure of custom arrays, for example when an array fails to decompile you can go to options and define its structure and try again!
    • Float values are no longer decompiled to the precision of 2 anymore. For example: 1.205 was decompiled to 1.20
    • Function precedences are now decompiled for example prior update “(4 + 5) * 4” was decompiled as “4 + 5 * 4”
    • Default UStructProperties and UArrayProperties now fetch their associated property to properly determine the array type even if nested deeply
    • \r and \n escape chars are now properly displayed for both string constants and default string values
    • Array variables whom have a fixed size determined by an Enum constant are now decompiled as well
    • Enum comparisons such as ENetMode and ENetRole are now replaced with their corresponding enum name
    • Improved looping ifs and foreach iterations. Breaks, continues are now suppressed when necessary and printed in situtations they weren't previously
    • NoExport specifier is now suppressed on UE3+ builds as it became redundant
    • K2Call, K2Override, and K2Pure function specifiers are now decompiled
    • Supported many more UnrealScript casting tokens such as StringToDelegate, ObjectToInterface, InterfaceToObject, and InterfaceToBool
    • Better handling of buffer disposing and DeserializeOnDemand handling which means a much faster package loading process


Interface

    • Added an Context Menu for the Text Editor with the following choices: “Copy”, “Search UnrealWiki for …”
    • Added “Managed Properties” to object nodes(This shows all the C# properties of a object, to be used for reading purposes only")
    • New functionality for the Hex Viewer tool such as “Copy Bytes”, “Copy View”, “Import Binary File”, and “Export Binary File”
    • Easier access to the context menu of already selected nodes
    • Added “Recent Opened Files” under “File”
    • You can now export classes/scripts using the commandline, for example: "UE Explorer.exe" "FILEPATH" export=classes(or scripts)
    • Added Find in Document, Find in Classes, and Find Next. Including shortcuts
    • Added new Context Menu shortcuts such as "View Processed Script", "View CPP Script", "Table Buffer", and "DefaultProperties Buffer"
    • Using the "View Buffer" on functions will now auto generate data structures for the functions code partition
    • Supported the Dutch language
    • Dontators of UE Explorer can now see their first name/nickname in the About dialog
    • Contextmenu options for nodes such as "View Tokens" are now also accessible through the Exports/Content tabs.
    • It’s now possible to view the buffer of Import and Export tables
    • Back and Forward now restores the Text Editor scrolled position
    • Window size, state, and position is now restored for the Main Form and Hex Viewer Dialog
    • Polished look of the overall application
    • More and better lazy loading of tabs which means a much faster package loading process


Fixes

    • Corrected version compatibility for all package versions
    • Gears of War 2(and many other games) classes are now properly deserialized(No longer rendered in red)
    • Fixes for Find such as: restart from carret not from last find position
    • Fixes for NO defaultproperties in Dungeon Defenders, Singularity, Crimecraft, Roboblitz, and UT3
    • Fixed missing statements in the Replication block if a package was built with debug tokens
    • Parameters with default values are now properly detected by using NothingTokens as skipped parameters
    • Empty config specifiers no longer have parentheses
    • (For UE3+ packages) decompilation of defaultproperties no longer stops after not finding an array's type